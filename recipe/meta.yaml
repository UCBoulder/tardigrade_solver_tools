package:
  name: solver_tools
  # TODO: setup and use pyproject.toml and a Conda build Jinja template
  version: {{ VERSION }}

source:
  path: '..'

build:
  script:
    - mkdir build-package
    - cd build-package
    - cmake .. -DCMAKE_BUILD_TYPE=Release
    - cmake --build . --target solver_tools
    - cmake --install . --prefix ${PREFIX}
  ignore_run_exports:
    - python_abi

requirements:
  build:
    - eigen >=3.3.7
    - error_tools
    - vector_tools
    - boost >=1.59  # TODO: Separate the package/test configuration to make BOOST an optional build dependency
    - setuptools_scm >=6.2
  host:
    - python
    - cmake >=3.18
    - {{ compiler('cxx') }}
    - doxygen  # TODO: Separate the package/documentation configuration to make Doxygen an optional build dependency
    - sphinx  # TODO: Separate the package/documentation configuration to make Sphinx an optional build dependency
  run:
    - {{ compiler('cxx') }}
    - eigen >=3.3.7
    - error_tools
    - vector_tools

test:
  requires:
    - cmake >=3.18
    - boost >=1.59
    - doxygen  # TODO: Separate the package/documentation configuration to make Doxygen an optional build dependency
    - sphinx  # TODO: Separate the package/documentation configuration to make Sphinx an optional build dependency
  source_files:
    - CMakeLists.txt
    - src/cpp/tests/CMakeLists.txt
    - src/cpp/tests/test_solver_tools.cpp
  commands:
    - dylib='so'
    - if [ $(uname) = 'Darwin' ]; then dylib='dylib'; fi
    - mkdir build-tests
    - cd build-tests
    - installed_linked_library_parent="$(dirname $(find ${PREFIX} -name libsolver_tools.${dylib}))"
    - export LD_LIBRARY_PATH="${installed_linked_library_parent}:${LD_LIBRARY_PATH}"
    - cmake .. -DCMAKE_BUILD_TYPE=conda-test
    - cmake --build . --verbose
    - ctest --output-on-failure
